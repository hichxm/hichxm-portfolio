env:
  DOCKER_IMAGE_NAME: hichxm-fr
  DOCKER_REGISTRY: registry.vps.apprentisconnect.fr
  DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

name: Build, Push and Deploy

on:
  push:
    branches:
      - main

jobs:
  run_tests:
    name: Run PHPUnit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: xdebug
          tools: composer:v2
          extensions: mbstring, intl

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3
        with:
          composer-options: --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml --colors=never --coverage-text

  tag_release:
    name: Generate tag and release
    runs-on: ubuntu-latest
    needs: run_tests
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.gen_tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate tag
        id: gen_tag
        shell: bash
        run: |
          VERSION_PREFIX=""
          VERSION_MAJOR_MINOR="1.2"
          VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$' || true)
          if [ -z "$VERSION_PATCH" ]; then
            VERSION_PATCH=0
          else
            VERSION_PATCH=$((VERSION_PATCH + 1))
          fi
          NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
          echo "Generated new tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Create repository tag
        uses: actions/github-script@v7
        env:
          NEW_TAG: ${{ steps.gen_tag.outputs.new_tag }}
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.NEW_TAG}`,
              sha: context.sha
            })

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.gen_tag.outputs.new_tag }}
          name: Release ${{ steps.gen_tag.outputs.new_tag }}
          draft: false
          prerelease: false

  build_and_push:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    needs: tag_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ needs.tag_release.outputs.new_tag }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

  deploy_webhook:
    name: Deploy via Portainer
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Webhook push to Portainer
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK_SECRET }}